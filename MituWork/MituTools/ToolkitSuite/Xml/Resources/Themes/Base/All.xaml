<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:tk="http://www.qdocuments.net" xmlns:d="http://schemas.microsoft.com/expression/blend/2008">
	<!--ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="TimePicker.xaml"></ResourceDictionary>
        <ResourceDictionary Source="DockPanelSplitter.xaml"></ResourceDictionary>
        <ResourceDictionary Source="ImageView.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries-->
	<!--Style TargetType="{x:Type tk:CodeTableComboBox}" BasedOn="{StaticResource ResourceKey={x:Type ComboBox}}"/-->
	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F3F3F3" Offset="0"/>
		<GradientStop Color="#EBEBEB" Offset="0.5"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#CDCDCD" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonOverBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFFAFAFA" Offset="0"/>
		<GradientStop Color="#FFE0E0E3" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonPressedBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFE0E0E2" Offset="0"/>
		<GradientStop Color="#FFF8F8F8" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF969696"/>
	<Style x:Key="CloseableTabItemButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border SnapsToDevicePixels="true" x:Name="Chrome" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Opacity="0"/>
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="Chrome" Value="1"/>
							<Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ButtonOverBackground}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Opacity" TargetName="Chrome" Value="1"/>
							<Setter Property="Background" TargetName="Chrome" Value="{DynamicResource ButtonPressedBackground}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<DataTemplate x:Key="TabHeader">
		<DockPanel x:Name="ContentPanel">
			<Button x:Name="PART_Close" HorizontalAlignment="Center" Margin="3,0,3,0" VerticalAlignment="Center" Width="16" Height="16" DockPanel.Dock="Right" Style="{DynamicResource CloseableTabItemButtonStyle}" ToolTip="关闭" Tag="{Binding Path=Attribute.RegName}" Command="{tk:Command StringFormat={tk:StringResource CloseModuleCmdFmtJson}, Source=Tag}">
				<Path x:Name="Path" Stretch="Fill" StrokeThickness="0.5" Stroke="#FF333333" Fill="#FF969696" Data="F1 M 2.28484e-007,1.33331L 1.33333,0L 4.00001,2.66669L 6.66667,6.10352e-005L 8,1.33331L 5.33334,4L 8,6.66669L 6.66667,8L 4,5.33331L 1.33333,8L 1.086e-007,6.66669L 2.66667,4L 2.28484e-007,1.33331 Z " HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
			</Button>
			<Image Source="{Binding Path=Attribute.IconName}" Height="16" DockPanel.Dock="Left"/>
			<TextBlock DockPanel.Dock="Left" Text="{Binding Path=Attribute.DisplayName}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
		</DockPanel>
	</DataTemplate>
	<!--页面报错的时候提供的模板，不幸的是每种控件都必须加进来把EroorTemplate加进来-->
	<Style TargetType="Control" x:Key="ErrorTemplate">
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="Validation.ErrorTemplate">
					<Setter.Value>
						<ControlTemplate>
							<AdornedElementPlaceholder x:Name="holder">
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
									<TextBlock Foreground="Red" Margin="0,0,20,0" Text="{Binding ElementName=holder,
					Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
									<Image Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Right" Source="{Binding Source={tk:Resource Path=Images/png/008删除.png}}"/>
								</StackPanel>
							</AdornedElementPlaceholder>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Storyboard x:Key="FadeInOutTransform">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1"/>
		<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" From="0.8" To="1" Duration="0:0:1"/>
		<DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" From="0.8" To="1" Duration="0:0:1"/>
	</Storyboard>
	<Style TargetType="TextBox" BasedOn="{StaticResource ErrorTemplate}">
	<Style.Triggers>
			<Trigger Property="TextBoxBase.IsReadOnly" Value="True">
				<Setter Property="TextBoxBase.Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Page}},Path=Background}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>

@using System.Text;
@using Toolkit.Suite
@using Toolkit.Suite.Utility
@using YJC.Toolkit.Data;
@using YJC.Toolkit.Sys;
@{
    GeneratorItemEventArgs e = @Model as GeneratorItemEventArgs;
    TableInfo table = e.Table;
    StringBuilder builder = new StringBuilder();
}
<?xml version="1.0" encoding="UTF-8"?>
<tk:Toolkit version="5.0" xsi:schemaLocation="http://www.qdocuments.net ..\..\schema\v5\DataXml.xsd" xmlns:tk="http://www.qdocuments.net" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tk:Table TableName="@table.TableName">
    <tk:TableDesc>
      <tk:Content>@table.TableDesc</tk:Content>
    </tk:TableDesc>
@{
  int i = 0;
  foreach (var field in table.Fields)
  {
    ++i;  
    builder.Clear();
    if (field.IsKey)
      builder.Append(" IsKey=\"true\"");
    if (field.IsAutoInc)
      builder.Append(" IsAutoInc=\"true\"");
    if (!field.IsEmpty)
      builder.Append(" IsEmpty=\"false\"");
    @:<tk:Field DataType="@RazorUtil.GetDataType(field.DataType)"@builder.ToString()>
      @:<tk:FieldName>@field.FieldName</tk:FieldName>
      @:<tk:NickName>@StringUtil.GetSignName(field.FieldName)</tk:NickName>
      @:<tk:DisplayName>
        @:<tk:Content>@field.DisplayName</tk:Content>
      @:</tk:DisplayName>
    if (field.DataType == XmlDataType.String) 
    {
      @:<tk:Length>@field.Length</tk:Length> 
    }
    string decoder = string.Empty;
    if (!string.IsNullOrEmpty(field.CodeTable))
    {
        if (field.HtmlCtrl == HtmlCtrlType.Combo)
            decoder = "      <tk:CodeTable>" + field.CodeTable + "</tk:CodeTable>\n";
        else if (field.HtmlCtrl == HtmlCtrlType.EasySearch)
            decoder = "      <tk:EasySearch RegName=\"" + field.CodeTable + "\"/>\n";
    }
      @decoder
      @:<tk:Layout Layout="@field.Layout" UnitNum="@field.UnitNumber" />
      @:<tk:Control Control="@field.HtmlCtrl" Order="@field.Order" DefaultShow="@field.GetPageStyle()"/>
    if (field.DataType == XmlDataType.Text) 
    {
      @:<tk:ListDetail TextHead="true" />
    }
    if (!string.IsNullOrEmpty(field.DefaultValue))
    {
      @:<tk:Edit><tk:DefaultValue NeedParser="false">@field.DefaultValue</tk:DefaultValue></tk:Edit>
    }
    if (field.HtmlCtrl == HtmlCtrlType.CheckBox)
    {
      @:<tk:Extension CheckValue="1" UnCheckValue="0"/>
    }
    @:</tk:Field>
  }
}
  </tk:Table>
</tk:Toolkit>